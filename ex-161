;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname ex-161) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;; ex-161
;; Translate the examples into tests and make sure
;; they all succeed. Then change the function in
;; fig. 64 so that everyone gets $14 per hour. Now
;; revise the entire program so that changing the wage
;; for everyone is a single chnage to the *entire*
;; program and not several.


(define HOURLY-WAGE 14)


; A List-of-numbers is one of:
; - '()
; - (cons Number List-of-numbers)
(define low0 '())
(define low1 (cons 28 low0))
(define low2 (cons 4 (cons 2 '())))


; List-of-numbers -> List-of-numbers
; computes the weekly wages for the weekly hours

(check-expect (wage* low0) low0)
(check-expect (wage* low1) (cons 392 '()))
(check-expect (wage* low2)
              (cons 56 (cons 28 '())))

(define (wage* whrs)
  (cond
    [(empty? whrs) '()]
    [(cons? whrs) (cons (wage (first whrs))
                        (wage* (rest whrs)))]))


; Number -> Number
; computes the wage for h hours of work

(check-expect (wage 2) (* HOURLY-WAGE 2))

(define (wage h)
  (* HOURLY-WAGE h))


