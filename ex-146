;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname ex-146) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
(define ABSOLUTE0 -272)


; An NEList-of-temperatures is one of:
; - (cons CTemperature '())
; - (cons CTemperature NEList-of-temperatures)
; *interpretation* non-empty lists of Celsius temperatures

(define ne-l1 (cons ABSOLUTE0 '()))
(define ne-l2 (cons 1 (cons 2 (cons 3 '()))))
(define ne-lc2 (cons 2 (cons 2 '())))
(define ne-lc4 (cons 2 (cons 2 (cons 2 (cons 2 '())))))

; NEList-of-temperatures -> Number
; computes the average temperature

(check-expect (average ne-l2) 2)

(define (average ne-l)
  (/
   (sum ne-l)
   (how-many ne-l)))


; NEList-of-temperatures -> Number
; adds up the temperatures on the given list

(check-expect (sum ne-l1) ABSOLUTE0)
(check-expect (sum ne-l2) 6)

(define (sum ne-l)
  (cond
    [(empty? (rest ne-l)) (first ne-l)]
    [else
     (+ (first ne-l)
        (sum (rest ne-l)))]))


; List-of-temperatures -> Number
; counts the temperatures on the given list

(check-expect (how-many ne-l1) 1)
(check-expect (how-many ne-l2) 3)
(check-expect (how-many ne-lc2) 2)
(check-expect (how-many ne-lc4) 4)

(define (how-many ne-l)
  (cond
    [(empty? (rest ne-l)) 1]
    [else
     (+ 1
        (how-many (rest ne-l)))]))
