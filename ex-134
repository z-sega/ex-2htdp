;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname ex-134) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;; --ex-134
;; Develop the contains? function, which determines whether
;; some given string occurs on a given list of strings.

; A List-of-names is one of:
; - '()
; - (cons String List-of-names)
; *interpretation* a list of contacts, by last name

; String List-of-names -> Boolean
; determines whether the given String f
; is in the given List-of-names alon

(check-expect (contains? "Flatt" '()) #false)
(check-expect (contains? "Flatt"
               (cons "Find" '())) #false)
(check-expect (contains? "Flatt"
               (cons "Flatt" '())) #true)
(check-expect (contains? "Flatt"
               (cons "A"
                     (cons "Flatt"
                           (cons "C" '()))))
              #true)
(check-expect (contains? "Flatt"
               (cons "A"
                     (cons "B"
                           (cons "C" '()))))
              #false)

(define (contains? f alon)
  (cond
    [(empty? alon) #false]
    [(cons? alon)
     (or (string=? (first alon) f)
         (contains? f (rest alon)))]))
